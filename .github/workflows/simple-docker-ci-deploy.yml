
name: Push single docker Flask App to Docker Hub

on:
  workflow_dispatch:
    # inputs:
    #   PROD_DATABASE_URI:
    #     description: 'Prod database URI'
    #     type: environment
  # push:
  #   paths:
  #     - "Ressources/Outils_Dev/Flask/flask_exercises/**"   # Only run this workflow if there's a change in flask_exercises folder


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: "/home/runner/work/teaching-resources/teaching-resources/Ressources/Outils_dev/Flask/flask_exercises/"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python (optional, required if you do Python-based steps)
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Build Docker image
        run: |
          docker build -t flask_example:latest -f prod.dockerfile .

      # The following step is optional if you just want to build and then push to a registry
      # or deploy somewhere else. This starts the containers in the GitHub runner for testing.
      - name: Spin up containers for testing
        run: |
          docker run -d -p 5000:5000 -e PROD_DATABASE_URI=${{ secrets.PROD_DATABASE_URI }} --name flask_example_container flask_example:latest
          # Optional: Wait or test
              timeout 60 bash -c 'while [[ "$(curl -s http://localhost:5000/health | grep -c \"status\":\"healthy\")" != "1" ]]; do sleep 1; done'
          docker ps
      # At this point, you can run tests or confirm the containers are healthy
      # - name: Run tests
      #   run: |
      #     pip install pytest requests
      #     pytest

      # (Optional) If you want to push images to a registry like DockerHub, do it here.
      # You need to set up secrets DOCKERHUB_USERNAME and DOCKERHUB_PASSWORD in your repo settings.
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker images to registry
        run: |
          docker tag flask_example:latest ${{ secrets.DOCKERHUB_USERNAME }}/flask_example_repo:{{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask_example_repo:{{ github.sha }}

      # Additional steps for actual deployment to a server/cloud can go here.
      # For example, SSH to a remote host or use a cloud deployment action/service.
