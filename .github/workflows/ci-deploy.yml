# .github/workflows/deploy.yml

name: Push docker-compose Flask App + MySQL DB to Docker Hub

on:
  workflow_dispatch: # Triggers workflow manually
  push:
    paths:
      - 'Ressources/Outils_Dev/Flask/flask_exercises/**'   # Only run this workflow if there's a change in flask_exercises folder


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: "/home/runner/work/teaching-resources/teaching-resources/Ressources/Outils_dev/Flask/flask_exercises/"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python (optional, required if you do Python-based steps)
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Docker Compose (if not already installed)
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      # The following step is optional if you just want to build and then push to a registry
      # or deploy somewhere else. This starts the containers in the GitHub runner for testing.
      - name: Build and spin up containers for testing
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        run: |
          docker-compose -f docker-compose.prod.yml up -d
          # Optional: Wait or test
          sleep 20
          # At this point, you can run tests or confirm the containers are healthy
          # For example:
          docker ps
          pytest

      # (Optional) If you want to push images to a registry like DockerHub, do it here.
      # You need to set up secrets DOCKERHUB_USERNAME and DOCKERHUB_PASSWORD in your repo settings.
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker images to registry
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask_example_repo/flask_app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask_example_repo/mysql_db:latest

      # Additional steps for actual deployment to a server/cloud can go here.
      # For example, SSH to a remote host or use a cloud deployment action/service.
